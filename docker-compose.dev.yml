version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: halifax_postgres_dev
    environment:
      POSTGRES_DB: halifax_bars
      POSTGRES_USER: halifax_user
      POSTGRES_PASSWORD: halifax_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - halifax_dev_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U halifax_user -d halifax_bars"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: halifax_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_dev_data:/data
    networks:
      - halifax_dev_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend (Development)
  api:
    build:
      context: .
      dockerfile: docker/Dockerfile.api
      target: development
    container_name: halifax_api_dev
    environment:
      ENVIRONMENT: development
      DEBUG: true
      DB_HOST: postgres
      DB_PORT: 5432
      DB_DATABASE: halifax_bars
      DB_USER: halifax_user
      DB_PASSWORD: halifax_pass
      REDIS_HOST: redis
      REDIS_PORT: 6379
      LOG_LEVEL: DEBUG
      API_RELOAD: true
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      # Exclude node_modules and __pycache__
      - /app/node_modules
      - /app/src/__pycache__
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - halifax_dev_network
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000 --reload
    develop:
      watch:
        - action: sync
          path: ./src
          target: /app/src
        - action: rebuild
          path: requirements.txt

  # React Frontend (Development)
  frontend:
    build:
      context: .
      dockerfile: docker/Dockerfile.frontend
      target: development
    container_name: halifax_frontend_dev
    ports:
      - "3000:3000"
    volumes:
      - ./src/dashboard:/app/src
      - ./src/dashboard/public:/app/public
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
      - REACT_APP_API_URL=http://localhost:8000
    networks:
      - halifax_dev_network
    command: npm start
    develop:
      watch:
        - action: sync
          path: ./src/dashboard/src
          target: /app/src
        - action: sync
          path: ./src/dashboard/public
          target: /app/public

networks:
  halifax_dev_network:
    driver: bridge

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local